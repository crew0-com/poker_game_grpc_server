// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: gameroom.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const addGameRoomPlayer = `-- name: AddGameRoomPlayer :one
INSERT INTO game_room_players(game_room_id, player_id) values ($1, $2) returning game_room_id, player_id
`

type AddGameRoomPlayerParams struct {
	GameRoomID uuid.UUID `json:"game_room_id"`
	PlayerID   uuid.UUID `json:"player_id"`
}

func (q *Queries) AddGameRoomPlayer(ctx context.Context, arg AddGameRoomPlayerParams) (GameRoomPlayer, error) {
	row := q.queryRow(ctx, q.addGameRoomPlayerStmt, addGameRoomPlayer, arg.GameRoomID, arg.PlayerID)
	var i GameRoomPlayer
	err := row.Scan(&i.GameRoomID, &i.PlayerID)
	return i, err
}

const createGameRoom = `-- name: CreateGameRoom :one
INSERT INTO game_rooms(game_room_id, name) values ($1, $2) returning game_room_id, name, created_at, closed_at
`

type CreateGameRoomParams struct {
	GameRoomID uuid.UUID `json:"game_room_id"`
	Name       string    `json:"name"`
}

func (q *Queries) CreateGameRoom(ctx context.Context, arg CreateGameRoomParams) (GameRoom, error) {
	row := q.queryRow(ctx, q.createGameRoomStmt, createGameRoom, arg.GameRoomID, arg.Name)
	var i GameRoom
	err := row.Scan(
		&i.GameRoomID,
		&i.Name,
		&i.CreatedAt,
		&i.ClosedAt,
	)
	return i, err
}

const getGameRoom = `-- name: GetGameRoom :one
SELECT game_room_id, name, created_at, closed_at FROM game_rooms WHERE game_room_id = $1
`

func (q *Queries) GetGameRoom(ctx context.Context, gameRoomID uuid.UUID) (GameRoom, error) {
	row := q.queryRow(ctx, q.getGameRoomStmt, getGameRoom, gameRoomID)
	var i GameRoom
	err := row.Scan(
		&i.GameRoomID,
		&i.Name,
		&i.CreatedAt,
		&i.ClosedAt,
	)
	return i, err
}
